{"version":3,"file":"language_service.js","sourceRoot":"","sources":["../../../../../packages/language-service/src/language_service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileMetadataResolver, CompileNgModuleMetadata, CompilePipeSummary, CompilerConfig, DomElementSchemaRegistry, HtmlParser, I18NHtmlParser, Lexer, NgAnalyzedModules, Parser, TemplateParser} from '@angular/compiler';\n\nimport {AstResult, TemplateInfo} from './common';\nimport {getTemplateCompletions} from './completions';\nimport {getDefinition} from './definitions';\nimport {getDeclarationDiagnostics, getTemplateDiagnostics} from './diagnostics';\nimport {getHover} from './hover';\nimport {Completions, Definition, Diagnostic, DiagnosticKind, Diagnostics, Hover, LanguageService, LanguageServiceHost, Pipes, Span, TemplateSource} from './types';\n\n\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @publicApi\n */\nexport function createLanguageService(host: LanguageServiceHost): LanguageService {\n  return new LanguageServiceImpl(host);\n}\n\nclass LanguageServiceImpl implements LanguageService {\n  constructor(private host: LanguageServiceHost) {}\n\n  private get metadataResolver(): CompileMetadataResolver { return this.host.resolver; }\n\n  getTemplateReferences(): string[] { return this.host.getTemplateReferences(); }\n\n  getDiagnostics(fileName: string): Diagnostics|undefined {\n    let results: Diagnostics = [];\n    let templates = this.host.getTemplates(fileName);\n    if (templates && templates.length) {\n      results.push(...getTemplateDiagnostics(fileName, this, templates));\n    }\n\n    let declarations = this.host.getDeclarations(fileName);\n    if (declarations && declarations.length) {\n      const summary = this.host.getAnalyzedModules();\n      results.push(...getDeclarationDiagnostics(declarations, summary));\n    }\n\n    return uniqueBySpan(results);\n  }\n\n  getPipesAt(fileName: string, position: number): CompilePipeSummary[] {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return templateInfo.pipes;\n    }\n    return [];\n  }\n\n  getCompletionsAt(fileName: string, position: number): Completions {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return getTemplateCompletions(templateInfo);\n    }\n  }\n\n  getDefinitionAt(fileName: string, position: number): Definition {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return getDefinition(templateInfo);\n    }\n  }\n\n  getHoverAt(fileName: string, position: number): Hover|undefined {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return getHover(templateInfo);\n    }\n  }\n\n  private getTemplateAstAtPosition(fileName: string, position: number): TemplateInfo|undefined {\n    let template = this.host.getTemplateAt(fileName, position);\n    if (template) {\n      let astResult = this.getTemplateAst(template, fileName);\n      if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n          astResult.directives && astResult.pipes && astResult.expressionParser)\n        return {\n          position,\n          fileName,\n          template,\n          htmlAst: astResult.htmlAst,\n          directive: astResult.directive,\n          directives: astResult.directives,\n          pipes: astResult.pipes,\n          templateAst: astResult.templateAst,\n          expressionParser: astResult.expressionParser\n        };\n    }\n    return undefined;\n  }\n\n  getTemplateAst(template: TemplateSource, contextFile: string): AstResult {\n    let result: AstResult|undefined = undefined;\n    try {\n      const resolvedMetadata =\n          this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type as any);\n      const metadata = resolvedMetadata && resolvedMetadata.metadata;\n      if (metadata) {\n        const rawHtmlParser = new HtmlParser();\n        const htmlParser = new I18NHtmlParser(rawHtmlParser);\n        const expressionParser = new Parser(new Lexer());\n        const config = new CompilerConfig();\n        const parser = new TemplateParser(\n            config, this.host.resolver.getReflector(), expressionParser,\n            new DomElementSchemaRegistry(), htmlParser, null !, []);\n        const htmlResult = htmlParser.parse(template.source, '', true);\n        const analyzedModules = this.host.getAnalyzedModules();\n        let errors: Diagnostic[]|undefined = undefined;\n        let ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n        if (!ngModule) {\n          // Reported by the the declaration diagnostics.\n          ngModule = findSuitableDefaultModule(analyzedModules);\n        }\n        if (ngModule) {\n          const resolvedDirectives = ngModule.transitiveModule.directives.map(\n              d => this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference));\n          const directives = removeMissing(resolvedDirectives).map(d => d.metadata.toSummary());\n          const pipes = ngModule.transitiveModule.pipes.map(\n              p => this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary());\n          const schemas = ngModule.schemas;\n          const parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n          result = {\n            htmlAst: htmlResult.rootNodes,\n            templateAst: parseResult.templateAst,\n            directive: metadata, directives, pipes,\n            parseErrors: parseResult.errors, expressionParser, errors\n          };\n        }\n      }\n    } catch (e) {\n      let span = template.span;\n      if (e.fileName == contextFile) {\n        span = template.query.getSpanAt(e.line, e.column) || span;\n      }\n      result = {errors: [{kind: DiagnosticKind.Error, message: e.message, span}]};\n    }\n    return result || {};\n  }\n}\n\nfunction removeMissing<T>(values: (T | null | undefined)[]): T[] {\n  return values.filter(e => !!e) as T[];\n}\n\nfunction uniqueBySpan < T extends {\n  span: Span;\n}\n> (elements: T[] | undefined): T[]|undefined {\n  if (elements) {\n    const result: T[] = [];\n    const map = new Map<number, Set<number>>();\n    for (const element of elements) {\n      let span = element.span;\n      let set = map.get(span.start);\n      if (!set) {\n        set = new Set();\n        map.set(span.start, set);\n      }\n      if (!set.has(span.end)) {\n        set.add(span.end);\n        result.push(element);\n      }\n    }\n    return result;\n  }\n}\n\nfunction findSuitableDefaultModule(modules: NgAnalyzedModules): CompileNgModuleMetadata|undefined {\n  let result: CompileNgModuleMetadata|undefined = undefined;\n  let resultSize = 0;\n  for (const module of modules.ngModules) {\n    const moduleSize = module.transitiveModule.directives.length;\n    if (moduleSize > resultSize) {\n      result = module;\n      resultSize = moduleSize;\n    }\n  }\n  return result;\n}\n"]}