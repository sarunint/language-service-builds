{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../packages/language-service/src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AstPath, CompileDirectiveSummary, CompileTypeMetadata, CssSelector, DirectiveAst, ElementAst, EmbeddedTemplateAst, HtmlAstPath, Node as HtmlNode, ParseSourceSpan, RecursiveTemplateAstVisitor, RecursiveVisitor, TemplateAst, TemplateAstPath, identifierName, templateVisitAll, visitAll} from '@angular/compiler';\nimport {DiagnosticTemplateInfo} from '@angular/compiler-cli/src/language_services';\nimport * as ts from 'typescript';\n\nimport {SelectorInfo, TemplateInfo} from './common';\nimport {Span} from './types';\n\nexport interface SpanHolder {\n  sourceSpan: ParseSourceSpan;\n  endSourceSpan?: ParseSourceSpan|null;\n  children?: SpanHolder[];\n}\n\nexport function isParseSourceSpan(value: any): value is ParseSourceSpan {\n  return value && !!value.start;\n}\n\nexport function spanOf(span: SpanHolder): Span;\nexport function spanOf(span: ParseSourceSpan): Span;\nexport function spanOf(span: SpanHolder | ParseSourceSpan | undefined): Span|undefined;\nexport function spanOf(span?: SpanHolder | ParseSourceSpan): Span|undefined {\n  if (!span) return undefined;\n  if (isParseSourceSpan(span)) {\n    return {start: span.start.offset, end: span.end.offset};\n  } else {\n    if (span.endSourceSpan) {\n      return {start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset};\n    } else if (span.children && span.children.length) {\n      return {\n        start: span.sourceSpan.start.offset,\n        end: spanOf(span.children[span.children.length - 1]) !.end\n      };\n    }\n    return {start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset};\n  }\n}\n\nexport function inSpan(position: number, span?: Span, exclusive?: boolean): boolean {\n  return span != null && (exclusive ? position >= span.start && position < span.end :\n                                      position >= span.start && position <= span.end);\n}\n\nexport function offsetSpan(span: Span, amount: number): Span {\n  return {start: span.start + amount, end: span.end + amount};\n}\n\nexport function isNarrower(spanA: Span, spanB: Span): boolean {\n  return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\n\nexport function hasTemplateReference(type: CompileTypeMetadata): boolean {\n  if (type.diDeps) {\n    for (let diDep of type.diDeps) {\n      if (diDep.token && diDep.token.identifier &&\n          identifierName(diDep.token !.identifier !) == 'TemplateRef')\n        return true;\n    }\n  }\n  return false;\n}\n\nexport function getSelectors(info: TemplateInfo): SelectorInfo {\n  const map = new Map<CssSelector, CompileDirectiveSummary>();\n  const selectors: CssSelector[] = flatten(info.directives.map(directive => {\n    const selectors: CssSelector[] = CssSelector.parse(directive.selector !);\n    selectors.forEach(selector => map.set(selector, directive));\n    return selectors;\n  }));\n  return {selectors, map};\n}\n\nexport function flatten<T>(a: T[][]) {\n  return (<T[]>[]).concat(...a);\n}\n\nexport function removeSuffix(value: string, suffix: string) {\n  if (value.endsWith(suffix)) return value.substring(0, value.length - suffix.length);\n  return value;\n}\n\nexport function uniqueByName < T extends {\n  name: string;\n}\n> (elements: T[] | undefined): T[]|undefined {\n  if (elements) {\n    const result: T[] = [];\n    const set = new Set<string>();\n    for (const element of elements) {\n      if (!set.has(element.name)) {\n        set.add(element.name);\n        result.push(element);\n      }\n    }\n    return result;\n  }\n}\n\nexport function isTypescriptVersion(low: string, high?: string) {\n  const version = ts.version;\n\n  if (version.substring(0, low.length) < low) return false;\n\n  if (high && (version.substring(0, high.length) > high)) return false;\n\n  return true;\n}\n\nexport function diagnosticInfoFromTemplateInfo(info: TemplateInfo): DiagnosticTemplateInfo {\n  return {\n    fileName: info.fileName,\n    offset: info.template.span.start,\n    query: info.template.query,\n    members: info.template.members,\n    htmlAst: info.htmlAst,\n    templateAst: info.templateAst\n  };\n}\n\nexport function findTemplateAstAt(\n    ast: TemplateAst[], position: number, allowWidening: boolean = false): TemplateAstPath {\n  const path: TemplateAst[] = [];\n  const visitor = new class extends RecursiveTemplateAstVisitor {\n    visit(ast: TemplateAst, context: any): any {\n      let span = spanOf(ast);\n      if (inSpan(position, span)) {\n        const len = path.length;\n        if (!len || allowWidening || isNarrower(span, spanOf(path[len - 1]))) {\n          path.push(ast);\n        }\n      } else {\n        // Returning a value here will result in the children being skipped.\n        return true;\n      }\n    }\n\n    visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n      return this.visitChildren(context, visit => {\n        // Ignore reference, variable and providers\n        visit(ast.attrs);\n        visit(ast.directives);\n        visit(ast.children);\n      });\n    }\n\n    visitElement(ast: ElementAst, context: any): any {\n      return this.visitChildren(context, visit => {\n        // Ingnore providers\n        visit(ast.attrs);\n        visit(ast.inputs);\n        visit(ast.outputs);\n        visit(ast.references);\n        visit(ast.directives);\n        visit(ast.children);\n      });\n    }\n\n    visitDirective(ast: DirectiveAst, context: any): any {\n      // Ignore the host properties of a directive\n      const result = this.visitChildren(context, visit => { visit(ast.inputs); });\n      // We never care about the diretive itself, just its inputs.\n      if (path[path.length - 1] == ast) {\n        path.pop();\n      }\n      return result;\n    }\n  };\n\n  templateVisitAll(visitor, ast);\n\n  return new AstPath<TemplateAst>(path, position);\n}\n"]}